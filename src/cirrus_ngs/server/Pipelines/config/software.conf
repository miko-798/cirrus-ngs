#!/bin/bash
software_dir=/shared/workspace/software

#human
export hg19_fai="$software_dir/sequences/Hsapiens/ucsc.hg19.fasta.fai"
export hg19_fasta="$software_dir/sequences/Hsapiens/ucsc.hg19.fasta"
export hg19_gtf="$software_dir/annotation/Hsapiens/hg19/gencode.v19.annotation.gtf"
export hg19_chromosome_list="chrM chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chr20 chr21 chr22 chrX chrY" 
export hg19_bwa_index="$software_dir/genomes/Hsapiens/bwa/ucsc.hg19.fasta"
export hg19_bowtie_index="$software_dir/bowtie_index/hsapiens_hg19/genome"
export hg19_dbsnp="$software_dir/variation/dbsnp_138.hg19.vcf"
export hg19_mills="$software_dir/variation/Mills_and_1000G_gold_standard.indels.hg19.sites.vcf"
export hg19_hapmap="$software_dir/variation/hapmap_3.3.hg19.sites.vcf"
export hg19_omni="$software_dir/variation/1000G_omni2.5.hg19.sites.vcf"
export hg19_snps_1000G="$software_dir/variation/1000G_phase1.snps.high_confidence.hg19.sites.vcf"
export hg19_indels_1000G="$software_dir/variation/1000G_phase1.indels.hg19.sites.vcf"
export hg19_cosmic="~/tempcosmic.vcf"

#mouse
export mm10_fasta="$software_dir/sequences/Mmusculus/GRCm38_68.fa"
export mm10_fai="$software_dir/sequences/Mmusculus/GRCm38_68.fa.fai"
export mm10_gtf="$software_dir/annotation/Mus_musculus/mm10/Mus_musculus.GRCm38.68.gtf"
export mm10_chromosome_list="1 10 11 12 13 14 15 16 17 18 19 2 3 4 5 6 7 8 9 MT X Y"
export mm10_bwa_index="$software_dir/genomes/Mmusculus/bwa/GRCm38_68.fa"
export mm10_bowtie_index="$software_dir/bowtie_index/mmusculus_mm10/genome"
export mm10_indels="$software_dir/variation/mgp.v5.merged.indels.dbSNP142.normed.vcf.gz"
export mm10_dbsnp="$software_dir/variation/mgp.v5.merged.snps_all.dbSNP142.vcf.gz"

# genome_STAR_index
export hg19_STAR_index="$software_dir/STAR_index/Hsapiens/hg19/human"
export mm10_STAR_index="$software_dir/STAR_index/Mus_musculus/mm10/mouse"

export PATH="$software_dir/anaconda3/bin:$PATH"
export fastqc="$software_dir/FastQC/fastqc"
export trimmomatic="$software_dir/Trimmomatic-0.36/trimmomatic-0.36.jar"
export bwa="$software_dir/bwa/bwa-0.7.12/bwa"
export samblaster="$software_dir/samblaster/samblaster"
export samtools="$software_dir/samtools/samtools-1.1/samtools"
export sambamba="$software_dir/sambamba/0.4.7/bin/sambamba"
export mark_duplicates="$software_dir/picard-1.96/MarkDuplicates.jar"
export java="$software_dir/java/jre1.8.0_144/bin/java"
export bedtools="$software_dir/bedtools2/bin/bedtools"
export gatk="$software_dir/gatk/GenomeAnalysisTK-3.8-0/GenomeAnalysisTK.jar"
export bgzip="$software_dir/tabix-0.2.6/bgzip"
export tabix="$software_dir/tabix-0.2.6/tabix"
export vcf_concat="$software_dir/vcftools_0.1.12b/bin/vcf-concat"
export vcf_sort="/shared/workspace/Pipelines/util/SortVCF.py"
export python="$software_dir/anaconda3/bin/python"
export PERL5LIB="/shared/workspace/software/vcftools_0.1.12b/perl/"

#Chip
export bowtie="$software_dir/bowtie-1.0.1/bowtie"
export make_tag_directory="$software_dir/homer/bin/makeTagDirectory"
export make_UCSC_file="$software_dir/homer/bin/makeUCSCfile"
export find_peaks="$software_dir/homer/bin/findPeaks"
export annotate_peaks="$software_dir/homer/bin/annotatePeaks.pl"
export PATH=$PATH:"$software_dir/homer/bin"
export pos2bed="$software_dir/homer/bin/pos2bed.pl"
export find_motifs_genome="$software_dir/homer/bin/findMotifsGenome.pl"

#miRNA
export cutadapt="$software_dir/anaconda3/bin/cutadapt"
export bowtie2="$software_dir/bowtie2-2.3.2-legacy"
export bowtie2_index="$software_dir/bowtie2_index"
export hairpin_human_fa="$software_dir/bowtie_index/hairpin_human/hairpin_human.fa"
export multiqc="$software_dir/anaconda3/bin/multiqc"

# Kallisto
export kallisto="$software_dir/kallisto_linux-v0.43.1"
export kallisto_counts="$software_dir/kallisto/count_reads/transcript2gene_kallisto_counts_Hsa.pl"
export entrez_gene="$software_dir/kallisto/count_reads/gencode.v23.metadata.EntrezGene"
export gene_description="$software_dir/kallisto/count_reads/Hsa_gene_symbol_description.txt"

# Star
export picard="$software_dir/picard-1.96"
export STAR="$software_dir/STAR/2.5.3a/bin/Linux_x86_64/STAR"
export star_path="$software_dir/STAR/2.5.3a/bin/Linux_x86_64"

export human_genome="$software_dir/genomes/Hsapiens/star"
export rsem="$software_dir/RSEM-1.3.0/rsem-calculate-expression"

check_exit_status()
{
    curr_command=$1
    curr_script=$2
    status_file=$3

    for i in `seq 3`
    do
        temp_output=`eval $curr_command 2>&1`
        if [ $? -eq 0 ]
        then
            echo "$temp_output"
            echo "$curr_script"_"passed" >> $status_file
            return
        fi
    done

    echo "$temp_output"
    echo "$curr_script"_"failed" >> $status_file
    exit
}

check_step_already_done()
{
    curr_script=$1
    status_file=$2

    if [ `grep "$curr_script"_"passed" $status_file | wc -l` -ne 0 ] && \
        [ `grep "$curr_script"_"failed" $status_file | wc -l` -eq 0 ]
    then
        echo "Already finished running $curr_script"
        exit
    else
        sed -i "/${curr_script}_.*/d" $status_file
    fi
}

export -f check_exit_status
export -f check_step_already_done
